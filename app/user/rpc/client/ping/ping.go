// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package ping

import (
	"context"

	"rpc/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateUserRequest  = user.CreateUserRequest
	CreateUserResponse = user.CreateUserResponse
	GetUserRequest     = user.GetUserRequest
	GetUserResponse    = user.GetUserResponse
	Request            = user.Request
	Response           = user.Response
	UpdateUserRequest  = user.UpdateUserRequest
	UpdateUserResponse = user.UpdateUserResponse

	Ping interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultPing struct {
		cli zrpc.Client
	}
)

func NewPing(cli zrpc.Client) Ping {
	return &defaultPing{
		cli: cli,
	}
}

func (m *defaultPing) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := user.NewPingClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
